// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-signum@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var b=u.isPrimitive,v=h.isPrimitive,x=p,y=j;var w=function(e,t){return!b(e)||y(e)?new TypeError(x("invalid argument. `%s` must be a number primitive and not `NaN`. Value: `%s`.","mu",e)):v(t)?null:new TypeError(x("invalid argument. `%s` must be a positive number. Value: `%s`.","b",t))},N=f,L=g,E=c;var O=function(e,t,n){var s=e()-.5;return t-n*N(s)*E(1-2*L(s))},T=e,P=t,V=n,G=s,R=r,A=i,J=o,M=m,S=d.factory,z=a,k=l,q=p,B=w,C=O;var D=function(){var e,t,n,s,r,i;if(0===arguments.length)t=S();else if(1===arguments.length){if(!G(e=arguments[0]))throw new TypeError(q("invalid argument. Options argument must be an object. Value: `%s`.",e));if(A(e,"prng")){if(!R(e.prng))throw new TypeError(q("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=S(e)}else{if(s=B(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!G(e=arguments[2]))throw new TypeError(q("invalid argument. Options argument must be an object. Value: `%s`.",e));if(A(e,"prng")){if(!R(e.prng))throw new TypeError(q("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=S(e)}else t=S()}return T(n=void 0===r?j:h,"NAME","laplace"),e&&e.prng?(T(n,"seed",null),T(n,"seedLength",null),V(n,"state",J(null),M),T(n,"stateLength",null),T(n,"byteLength",null),T(n,"toJSON",J(null)),T(n,"PRNG",t)):(P(n,"seed",o),P(n,"seedLength",m),V(n,"state",l,p),P(n,"stateLength",d),P(n,"byteLength",a),T(n,"toJSON",u),T(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function d(){return t.stateLength}function a(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=k(t.state),e.params=void 0===r?[]:[r,i],e}function h(){return C(t,r,i)}function j(e,n){return z(e)||z(n)||n<=0?NaN:C(t,e,n)}},F=D(),H=D;e(F,"factory",H);var I=F;export{I as default,H as factory};
//# sourceMappingURL=index.mjs.map
