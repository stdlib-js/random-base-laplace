// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-number@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-signum@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-abs@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var b=u.isPrimitive,v=h.isPrimitive,x=j;var y=function(e,t){return!b(e)||x(e)?new TypeError("invalid argument. `mu` must be a number primitive and not `NaN`. Value: `"+e+"`."):v(t)?null:new TypeError("invalid argument. `b` must be a positive number. Value: `"+t+"`.")},w=f,N=g,L=c;var E=function(e,t,n){var s=e()-.5;return t-n*w(s)*L(1-2*N(s))},O=e,T=t,P=n,V=s,G=r,R=i,A=o,J=m,M=d.factory,S=a,z=l,k=p,q=y,B=E;var C=function(){var e,t,n,s,r,i;if(0===arguments.length)t=M();else if(1===arguments.length){if(!V(e=arguments[0]))throw new TypeError(k("invalid argument. Options argument must be an object. Value: `%s`.",e));if(R(e,"prng")){if(!G(e.prng))throw new TypeError(k("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=M(e)}else{if(s=q(r=arguments[0],i=arguments[1]))throw s;if(arguments.length>2){if(!V(e=arguments[2]))throw new TypeError(k("invalid argument. Options argument must be an object. Value: `%s`.",e));if(R(e,"prng")){if(!G(e.prng))throw new TypeError(k("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",e.prng));t=e.prng}else t=M(e)}else t=M()}return O(n=void 0===r?j:h,"NAME","laplace"),e&&e.prng?(O(n,"seed",null),O(n,"seedLength",null),P(n,"state",A(null),J),O(n,"stateLength",null),O(n,"byteLength",null),O(n,"toJSON",A(null)),O(n,"PRNG",t)):(T(n,"seed",o),T(n,"seedLength",m),P(n,"state",l,p),T(n,"stateLength",d),T(n,"byteLength",a),O(n,"toJSON",u),O(n,"PRNG",t),t=t.normalized),n;function o(){return t.seed}function m(){return t.seedLength}function d(){return t.stateLength}function a(){return t.byteLength}function l(){return t.state}function p(e){t.state=e}function u(){var e={type:"PRNG"};return e.name=n.NAME,e.state=z(t.state),e.params=void 0===r?[]:[r,i],e}function h(){return B(t,r,i)}function j(e,n){return S(e)||S(n)||n<=0?NaN:B(t,e,n)}},D=C(),F=C;e(D,"factory",F);var H=D;export{H as default,F as factory};
//# sourceMappingURL=index.mjs.map
